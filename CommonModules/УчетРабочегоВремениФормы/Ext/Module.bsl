
////////////////////////////////////////////////////////////////////////////
//ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ Документ.Планирование

Процедура ТабельПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка) Экспорт 
	
	Если Форма.Параметры.Ключ.Пустая() Тогда
		
		ЗначенияДляЗаполнения = Новый Структура("Месяц", "Объект.ПериодРегистрации");
		
		ЗаполнитьПервоначальныеЗначенияВФорме(Форма, ЗначенияДляЗаполнения);
		
		Если Не ЗначениеЗаполнено(Форма.Объект.ДатаНачалаПериода)
			И Не ЗначениеЗаполнено(Форма.Объект.ДатаОкончанияПериода) Тогда
			УчетРабочегоВремениКлиентСервер.ТабельУстановитьПериодДокумента(Форма);
		КонецЕсли;
		
		ТабельПриЧтенииДанных(Форма);
	КонецЕсли;
		
КонецПроцедуры

Процедура ТабельПриЧтенииДанных(Форма) 
		
	УчетРабочегоВремениКлиентСервер.ЗаполнитьМесяцПоДате(Форма, "Объект.ПериодРегистрации", "МесяцРегистрацииСтрокой");

	ТабельУстановитьВидимостьКолонокДнейПериода(Форма);
	
	ОформитьПоляТаблицыДнейМесяца(Форма.Элементы, НачалоМесяца(Форма.Объект.ДатаНачалаПериода), "ПланированиеПроект1_%1","ПланированиеПроект2_%1","ПланированиеКомментарий_%1");
	
	УстановитьИтоговыеЗначенияСмен(Форма);

КонецПроцедуры

Процедура ТабельПериодРегистрацииПриИзменении(Форма) Экспорт
	Объект = Форма.Объект;
	
	УчетРабочегоВремениКлиентСервер.ТабельУстановитьПериодДокумента(Форма);
	ОформитьПоляТаблицыДнейМесяца(Форма.Элементы, НачалоМесяца(Объект.ДатаНачалаПериода), "ПланированиеПроект1_%1","ПланированиеПроект2_%1","ПланированиеКомментарий_%1");	
	
	ТабельУстановитьВидимостьКолонокДнейПериода(Форма);
	
	ОчиститьТабельПоСотрудникам(Форма);
	УстановитьИтоговыеЗначенияСмен(Форма);

КонецПроцедуры

// Процедура заполняет заголовки полей таблицы "подневного" ввода данных,
// а также делает невидимыми колонки с 29 по 31 
// в зависимости от количества дней в выбранном месяце.
//
// Параметры:
//	ЭлементыФормы - коллекция элементов формы.
//	Месяц - дата, начало выбранного месяца.
//	ШаблонИмениПоля - строка, имя поля дня, в котором номер дня обозначен "%1".
//
Процедура ОформитьПоляТаблицыДнейМесяца(ЭлементыФормы, Месяц, ШаблонИмениПоля1, ШаблонИмениПоля2, ШаблонИмениПоля3) Экспорт
	
	ЦветРабочегоДня = ЦветаСтиля.ЦветТекстаФормы;
	ЦветВыходногоДня = ЦветаСтиля.ЦветОсобогоТекста;
	
	ПоследнийДеньМесяца = УчетРабочегоВремениКлиентСервер.КоличествоДнейМесяца(Месяц);
	
	Для НомерДня = 1 По ПоследнийДеньМесяца Цикл
		
		ТекущийДень = Дата(Год(Месяц), Месяц(Месяц), НомерДня);
		
		ДеньНедели = ДеньНедели(ТекущийДень);
		
		//В первой строке пишем день недели
		Элемент = ЭлементыФормы[СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонИмениПоля1, НомерДня)];
		Элемент.Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
								"%1%2%3", НомерДня, Символы.ПС, Формат(ТекущийДень, "ДФ=ддд"));
		Элемент.ЦветТекстаЗаголовка = ?(ДеньНедели = 6 Или ДеньНедели = 7, ЦветВыходногоДня, ЦветРабочегоДня);
		
		//Во второй строке отключаем вывод заголовка
		Элемент = ЭлементыФормы[СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонИмениПоля2, НомерДня)];
		Элемент.ОтображатьВШапке = Ложь;
		//Элемент.Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("%1", "Проекты");
								
		//Во третей строке отключаем вывод заголовка
		Элемент = ЭлементыФормы[СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонИмениПоля3, НомерДня)];
		Элемент.ОтображатьВШапке = Ложь;
		Элемент.ЦветТекста = WEBЦвета.Зеленый;
		
	КонецЦикла;
	
КонецПроцедуры	

Процедура ТабельПриЧтенииНаСервере(Форма) Экспорт
	
	ТабельПриЧтенииДанных(Форма);
	
КонецПроцедуры

Процедура ТабельУстановитьВидимостьКолонокДнейПериода(Форма)
	
	ПервыйДеньПериода = День(Форма.Объект.ДатаНачалаПериода);
	ПоследнийДеньПериода = День(Форма.Объект.ДатаОкончанияПериода);
	
	Для НомерДня = 1 По ПервыйДеньПериода - 1 Цикл
		Форма.Элементы["ПланированиеПроект1_" + НомерДня].Видимость = Ложь;
		Форма.Элементы["ПланированиеПроект2_" + НомерДня].Видимость = Ложь;
		Форма.Элементы["ПланированиеКомментарий_" + НомерДня].Видимость = Ложь;
	КонецЦикла;	
	
	Для НомерДня = ПервыйДеньПериода По ПоследнийДеньПериода Цикл
		Форма.Элементы["ПланированиеПроект1_" + НомерДня].Видимость = Истина;
		Форма.Элементы["ПланированиеПроект2_" + НомерДня].Видимость = Истина;
		Форма.Элементы["ПланированиеКомментарий_" + НомерДня].Видимость = Истина;
	КонецЦикла;	
	
	Для НомерДня = ПоследнийДеньПериода + 1 По 31 Цикл
		Форма.Элементы["ПланированиеПроект1_" + НомерДня].Видимость = Ложь;
		Форма.Элементы["ПланированиеПроект2_" + НомерДня].Видимость = Ложь;
		Форма.Элементы["ПланированиеКомментарий_" + НомерДня].Видимость = Ложь;		
	КонецЦикла;	
	
КонецПроцедуры

Процедура ОчиститьТабельПоСотрудникам(Форма)
	
	Объект = Форма.Объект;
	Для Каждого ДанныеПоСотруднику Из Объект.Планирование Цикл
		ОчиститьТабельПоСотруднику(ДанныеПоСотруднику)
	КонецЦикла;
		
КонецПроцедуры	

Процедура ПланированиеСотрудникПриИзменении(Форма) Экспорт
	
	Объект = Форма.Объект;
	ДанныеПоСотруднику = Объект.Планирование.НайтиПоИдентификатору(Форма.Элементы.Планирование.ТекущаяСтрока);
	ДанныеПоСотруднику.СменыИтог = 0;
	ОчиститьТабельПоСотруднику(ДанныеПоСотруднику);
	
КонецПроцедуры	

Процедура ОчиститьТабельПоСотруднику(ДанныеПоСотруднику)
	
	Для Сч = 1 По 31 Цикл
		ДанныеПоСотруднику["Проект1_"+Сч] = Неопределено;
		ДанныеПоСотруднику["Проект2_"+Сч] = Неопределено;
		ДанныеПоСотруднику["Комментарий_"+Сч] = Неопределено;
	КонецЦикла;	

КонецПроцедуры	

Процедура УстановитьИтоговыеЗначенияСмен(Форма) Экспорт
	
	Объект = Форма.Объект;
	Для Каждого СтрокаВремени Из Объект.Планирование Цикл
		РассчитатьИтогПоСотруднику(Объект, СтрокаВремени);		
	КонецЦикла;	
	
КонецПроцедуры

Процедура ПланированиеПроектПриИзменении(Форма) Экспорт
	
	Объект = Форма.Объект;
	СтрокаДанныхПланирование = Объект.Планирование.НайтиПоИдентификатору(Форма.Элементы.Планирование.ТекущаяСтрока);
	РассчитатьИтогПоСотруднику(Объект, СтрокаДанныхПланирование);		
	
КонецПроцедуры

Процедура РассчитатьИтогПоСотруднику(Объект, ДанныеПоСотруднику)
	
	НомерДняНачалаПериода = День(Объект.ДатаНачалаПериода);
	НомерДняОкончанияПериода = День(Объект.ДатаОкончанияПериода);
	
	ИтогоСмен = 0;
	Для НомерДня = НомерДняНачалаПериода По НомерДняОкончанияПериода Цикл
		Если ЗначениеЗаполнено(ДанныеПоСотруднику["Проект1_" + НомерДня])
			ИЛИ ЗначениеЗаполнено(ДанныеПоСотруднику["Проект2_" + НомерДня]) Тогда
			ИтогоСмен = ИтогоСмен+1;
		КонецЕсли;
	КонецЦикла;
	
	ДанныеПоСотруднику.СменыИтог = ИтогоСмен;
	
КонецПроцедуры	

////////////////////////////////////////////////////////////////////////////
//ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ ДОПОЛНИТЕЛЬНЫХ МЕТОДОВ

// Выполняет заполнение первоначальных значений при создании новых 
// объектов или открытии иных форм.
// Параметры:
//		Форма - форма, реквизиты которой необходимо заполнить.
//		ЗапрашиваемыеЗначения - структура с запрашиваемыми значениями.
//			Имя элемента структуры идентифицирует значение, которое 
//				необходимо заполнить.
//			Значение элемента структуры - путь к реквизиту формы, значение
//				которого необходимо заполнить.
//			Список поддерживаемых значений см. в описании ПолучитьЗначенияПоУмолчанию.
//
Процедура ЗаполнитьПервоначальныеЗначенияВФорме(Форма, ЗапрашиваемыеЗначения) Экспорт
	
	ФиксированныеЗначения = Новый Массив;
	Для Каждого ЗапрашиваемоеЗначение Из ЗапрашиваемыеЗначения Цикл
		Если ЗначениеЗаполнено(ОбщегоНазначенияКлиентСервер.ПолучитьРеквизитФормыПоПути(Форма, ЗапрашиваемоеЗначение.Значение)) Тогда
			ФиксированныеЗначения.Добавить(ЗапрашиваемоеЗначение.Ключ)
		КонецЕсли	
	КонецЦикла;

	ЗаполнитьЗначенияВФорме(Форма, ЗапрашиваемыеЗначения, ФиксированныеЗначения);
	
КонецПроцедуры

// Выполняет заполнение значений в форме на основании значений по умолчанию.
// 
// Параметры:
//		Форма - форма, реквизиты которой необходимо заполнить.
//		ЗапрашиваемыеЗначения - структура с запрашиваемыми значениями.
//			Имя элемента структуры идентифицирует значение, которое 
//				необходимо заполнить.
//			Значение элемента структуры - путь к реквизиту формы, значение
//				которого необходимо заполнить.
//			Список поддерживаемых значений см. в описании ПолучитьЗначенияПоУмолчанию.
//
//		ФиксированныеЗначения - (необязательный) массив, 
//				Содержит идентификаторы значений, 
//				которое не должны быть изменены при заполнении.
//
Процедура ЗаполнитьЗначенияВФорме(Форма, ЗапрашиваемыеЗначения, ФиксированныеЗначения = Неопределено) Экспорт
		
	ЗначенияЗаполняемыеПоУмолчанию = СписокДоступныхЗначенийПоУмолчанию();
	
	Для Каждого ЗапрашиваемоеЗначение Из ЗапрашиваемыеЗначения Цикл
		
		НайденноеЗначение = Неопределено;
		Если ЗначенияЗаполняемыеПоУмолчанию.Свойство(ЗапрашиваемоеЗначение.Ключ, НайденноеЗначение) Тогда
			ОбщегоНазначенияКлиентСервер.УстановитьРеквизитФормыПоПути(Форма, ЗапрашиваемоеЗначение.Значение, НайденноеЗначение);
		КонецЕсли;	
		
	КонецЦикла;
	
КонецПроцедуры

// Массив поддерживаемых идентификаторов значений по умолчанию.
Функция СписокДоступныхЗначенийПоУмолчанию() Экспорт
	
	ЗначенияПоУмолчанию = Новый Структура;
	ЗначенияПоУмолчанию.Вставить("Месяц", НачалоМесяца(ТекущаяДата()));
	Возврат ЗначенияПоУмолчанию;
	
КонецФункции
