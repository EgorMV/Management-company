
Функция ПолучитьОбязательныеРеквизиты() Экспорт 

	РеквизитыДляПроверки = Новый Структура;
	
    РеквизитыТЧ_Исполнители = Новый Структура();       
    РеквизитыТЧ_Исполнители.Вставить("Исполнитель", 2);
    РеквизитыДляПроверки.Вставить("Исполнители", РеквизитыТЧ_Исполнители); 
	
	РеквизитыТЧ_Работы = Новый Структура();  
	РеквизитыТЧ_Работы.Вставить("Работа", 2);
    РеквизитыДляПроверки.Вставить("Работы",РеквизитыТЧ_Работы); 
	
    Возврат РеквизитыДляПроверки;             
    
КонецФункции

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Отказ = ПроверитьНаПересечениеПериодов();
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;	
	
	Движения.ВыполненныеРаботы.Записывать = Истина;
	Движения.ВыполненныеРаботы.Очистить();
	
	Движения.ВыработкаСотрудников.Записывать = Истина;
	Движения.ВыработкаСотрудников.Очистить();
	
	Для Каждого Стр Из Работы Цикл
		
		Движение = Движения.ВыполненныеРаботы.Добавить();
		Движение.Период 	= ДатаОкончанияРабот;
		Движение.Проект 	= Проект;
		Движение.Работа 	= Стр.Работа;
		Движение.Количество = Стр.Количество;
		Движение.Комментарий = Стр.Комментарий;
		
	КонецЦикла;
	
	Для Каждого Стр Из РаспределениеПоРаботам Цикл
		
		Движение = Движения.ВыработкаСотрудников.Добавить();
		Движение.Период 		= Дата;
		Движение.Проект 		= Проект;
		Движение.Работа 		= Работы.Найти(Стр.ИдентификаторРаботы, "ИдентификаторРаботы").Работа;
		Движение.Сотрудник 		= Стр.Исполнитель;
		Движение.Бригадир		= Бригадир;
		Движение.ДатаНачала		= ДатаНачалаРабот;
		Движение.ДатаОкончания	= ДатаОкончанияРабот;
		Движение.ПроцентУчастия = Стр.ПроцентУчастия;
		
	КонецЦикла;
	
	Движения.Записать();
	
КонецПроцедуры

Функция ПроверитьНаПересечениеПериодов()
	
	ЕстьПересечения = Ложь;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ВыработкаСотрудников.Регистратор,
	|	ВыработкаСотрудников.Сотрудник
	|ИЗ
	|	РегистрНакопления.ВыработкаСотрудников КАК ВыработкаСотрудников
	|ГДЕ
	|	ВыработкаСотрудников.Сотрудник В(&Сотрудники)
	|	И ВыработкаСотрудников.Проект = &Проект
	|	И (&ДатаНачала МЕЖДУ ВыработкаСотрудников.ДатаНачала И ВыработкаСотрудников.ДатаОкончания
	|			ИЛИ &ДатаОкончания МЕЖДУ ВыработкаСотрудников.ДатаНачала И ВыработкаСотрудников.ДатаОкончания)
	|	И ВыработкаСотрудников.Регистратор <> &Регистратор";
	
	Запрос.УстановитьПараметр("Сотрудники"		, Исполнители.ВыгрузитьКолонку("Исполнитель"));
	Запрос.УстановитьПараметр("Проект"			, Проект);
	Запрос.УстановитьПараметр("ДатаНачала"		, ДатаНачалаРабот);
	Запрос.УстановитьПараметр("ДатаОкончания"	, ДатаОкончанияРабот);
	Запрос.УстановитьПараметр("Регистратор"		, Ссылка);
	
	Результат = Запрос.Выполнить();
	Если НЕ Результат.Пустой() Тогда
		ЕстьПересечения = Истина;
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			Сообщить("Сотрудник <"+Выборка.Сотрудник+"> в данный период работы уже занят на этом проекте");	
		КонецЦикла;
	КонецЕсли;
	
	Возврат ЕстьПересечения;
		
КонецФункции	