
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
		
	Если Параметры.Ключ.Пустая() Тогда
		Объект.Автор = ПараметрыСеанса.ТекущийПользователь;	
	КонецЕсли;
	
	ЗаполнитьДеревоКритериевОценок();

	// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтотОбъект, Элементы.ГруппаПечать);
	// Конец СтандартныеПодсистемы.Печать

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ТекущийОбъект.КритерииОценок.Очистить();	
	
	ВыбКритерии = Новый Массив;
	ВыбСтроки = РеквизитФормыВЗначение("ДеревоКритериев", Тип("ДеревоЗначений")).Строки.НайтиСтроки(Новый Структура("ЕстьЗамечание", Истина), Истина);
	Для Каждого Стр Из ВыбСтроки Цикл
		Если НЕ Стр.Критерий.ЭтоГруппа Тогда
			ЗаполнитьЗначенияСвойств(ТекущийОбъект.КритерииОценок.Добавить(), Стр);
		КонецЕсли;	
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ДеревоКритериев

&НаКлиенте
Процедура ЗаполнитьДерево(Команда)
	
	 ЗаполнитьДеревоКритериевОценок();

КонецПроцедуры

&НаКлиенте
Процедура ДеревоКритериевЕстьЗамечаниеПриИзменении(Элемент)
	
	ТекДанные = Элементы.ДеревоКритериев.ТекущиеДанные;
	Если ПроверитьКритерийНаСервере(ТекДанные.Критерий)	Тогда
		ТекДанные.ЕстьЗамечание = Ложь;
		Возврат;
	КонецЕсли;

	ОбновитьИтоговуюОценку();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДеревоКритериевОценок()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КритерииОценокКачестваРабот.Ссылка КАК Критерий,
	|	КритерииОценокКачестваРабот.Стоимость,
	|	ОценкаВыполненияРаботКритерииОценок.ЕстьЗамечание
	|ИЗ
	|	Справочник.КритерииОценокКачестваРабот КАК КритерииОценокКачестваРабот
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОценкаКачестваРабот.КритерииОценок КАК ОценкаВыполненияРаботКритерииОценок
	|		ПО КритерииОценокКачестваРабот.Ссылка = ОценкаВыполненияРаботКритерииОценок.Критерий
	|			И (ОценкаВыполненияРаботКритерииОценок.Ссылка = &ТекОбъект)
	|
	|УПОРЯДОЧИТЬ ПО
	|	КритерииОценокКачестваРабот.Ссылка ИЕРАРХИЯ";
	
	Запрос.УстановитьПараметр("ТекОбъект", Объект.Ссылка);
	
	Результат = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	ЗначениеВРеквизитФормы(Результат, "ДеревоКритериев");

КонецПроцедуры

&НаСервереБезКонтекста
Функция ПроверитьКритерийНаСервере(Критерий)
	
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Критерий, "ЭтоГруппа");
	
КонецФункции

#КонецОбласти

#Область Работы

&НаКлиенте
Процедура ВыбратьРаботы(Команда)
	
	ВыбРаботы = ПолучитьМассивРабот(Объект.Работы);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Заголовок", "Ведомость работ по проекту <"+Объект.Проект+">");
	ПараметрыФормы.Вставить("Владелец", Объект.Проект);
	ПараметрыФормы.Вставить("Работы", ВыбРаботы);
	ОткрытьФорму("Документ.ОценкаКачестваРабот.Форма.ФормаВыбораРабот", ПараметрыФормы, Элементы.Работы).Открыть();
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьРаботыИзГруппы(ГруппаРабот)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РеестрыРабот.Ссылка
	|ИЗ
	|	Справочник.РеестрыРабот КАК ВедомостиРабот
	|ГДЕ
	|	РеестрыРабот.Родитель = &Родитель";
	
	Запрос.УстановитьПараметр("Родитель", ГруппаРабот);
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			Если Объект.Работы.НайтиСтроки(Новый Структура("Работа", Выборка.Ссылка)).Количество() = 0 Тогда
				НСтрока = Объект.Работы.Добавить();
		    	НСтрока.Работа = Выборка.Ссылка;
			КонецЕсли;
		КонецЦикла;	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодборРабот(Команда)
	
	Отбор = Новый Структура;
	Отбор.Вставить("Владелец", Объект.Проект);
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ЗакрыватьПриВыборе", Ложь);
	ПараметрыФормы.Вставить("МножественныйВыбор", Истина);
	ПараметрыФормы.Вставить("Отбор", Отбор);
	ОткрытьФорму("Справочник.РеестрыРабот.ФормаВыбора", ПараметрыФормы, Элементы.Работы);
	
КонецПроцедуры

&НаКлиенте
Процедура РаботыОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	РаботыОбработкаВыбораНаСервере(ВыбранноеЗначение);
КонецПроцедуры

&НаСервере
Процедура РаботыОбработкаВыбораНаСервере(ВыбранноеЗначение)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Массив") Тогда
		Для Каждого Стр Из ВыбранноеЗначение Цикл
			Если НЕ Стр.ЭтоГруппа Тогда
				Если Объект.Работы.НайтиСтроки(Новый Структура("Работа", Стр)).Количество() = 0 Тогда
					НСтрока = Объект.Работы.Добавить();
		    		НСтрока.Работа = Стр;
				КонецЕсли;	
			Иначе
				ДобавитьРаботыИзГруппы(Стр);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РаботыПриАктивизацииСтроки(Элемент)
	
	ТекДанные = Элементы.Работы.ТекущиеДанные;
	Элементы.РаботыКомментарий.Доступность = ТекДанные.ЗамечаниеУстановлено; 	
	
КонецПроцедуры

&НаКлиенте
Процедура РаботыЗамечаниеУстановленоПриИзменении(Элемент)
	
	ТекДанные = Элементы.Работы.ТекущиеДанные;
	Элементы.РаботыКомментарий.Доступность = ТекДанные.ЗамечаниеУстановлено; 
	
КонецПроцедуры

#КонецОбласти

#Область ОтправкаПочты

&НаСервере
Функция СформироватьПараметрыПисьмаНаСервере()
	
	//Получим печатную форму "Форма оценки"
	МассивОбъектов = Новый Массив;
	МассивОбъектов.Добавить(Объект.Ссылка);
	ФормаОценки = Документы.ОценкаКачестваРабот.ПечатьФормыОценки(МассивОбъектов);
	
	//Получим адресатов
	Адресаты = СформироватьСписокПолучателейНаСервере();	

	ПараметрыПисьма = Новый Структура();
	ПараметрыПисьма.Вставить("ФормаОценки", ФормаОценки);
	ПараметрыПисьма.Вставить("Получатели", Адресаты.МассивПолучателей);
	ПараметрыПисьма.Вставить("ПолучателиКопии", Адресаты.МассивПолучателейКопии);
	
	Возврат ПараметрыПисьма;
	
КонецФункции

&НаСервере
Функция СформироватьСписокПолучателейНаСервере()
	
	МассивПолучателей = Новый Массив;
	МассивПолучателейКопии = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СотрудникиОтветственныеЗаПроверку.Сотрудник.Наименование КАК Сотрудник,
	|	СотрудникиОтветственныеЗаПроверку.Сотрудник.ЭлектронныйАдрес КАК ЭлектронныйАдрес
	|ИЗ
	|	РегистрСведений.СотрудникиОтветственныеЗаПроверку КАК СотрудникиОтветственныеЗаПроверку
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	Проекты.Ответственный,
	|	Проекты.Ответственный.ЭлектронныйАдрес
	|ИЗ
	|	Справочник.Проекты КАК Проекты
	|ГДЕ
	|	Проекты.Ссылка = &Проект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ВыработкаСотрудников.Период) КАК Период,
	|	ВыработкаСотрудников.Работа
	|ПОМЕСТИТЬ ВТ_ГрафикВыполнения
	|ИЗ
	|	РегистрНакопления.ВыработкаСотрудников КАК ВыработкаСотрудников
	|ГДЕ
	|	ВыработкаСотрудников.Проект = &Проект
	|	И ВыработкаСотрудников.Период <= &Период
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыработкаСотрудников.Работа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВыработкаСотрудников.Сотрудник.Наименование КАК Сотрудник,
	|	ВыработкаСотрудников.Сотрудник.ЭлектронныйАдрес КАК ЭлектронныйАдрес
	|ИЗ
	|	РегистрНакопления.ВыработкаСотрудников КАК ВыработкаСотрудников
	|ГДЕ
	|	(ВыработкаСотрудников.Период, ВыработкаСотрудников.Работа) В
	|			(ВЫБРАТЬ
	|				Т.Период,
	|				Т.Работа
	|			ИЗ
	|				ВТ_ГрафикВыполнения КАК Т)";
	
	Запрос.УстановитьПараметр("Период", Объект.Дата);
	Запрос.УстановитьПараметр("Проект", Объект.Проект);

	Результат = Запрос.ВыполнитьПакет();
	
	ВыборкаКопии = Результат[0].Выбрать();
	Пока ВыборкаКопии.Следующий() Цикл
		СтруктураПолучателей = Новый Структура;
		СтруктураПолучателей.Вставить("Выбран"			, Истина);
		СтруктураПолучателей.Вставить("Представление"	, ВыборкаКопии.Сотрудник);
		СтруктураПолучателей.Вставить("Адрес"			, ВыборкаКопии.ЭлектронныйАдрес);
		МассивПолучателейКопии.Добавить(СтруктураПолучателей);	
	КонецЦикла;
	
	ВыборкаОсновные = Результат[2].Выбрать();
	Пока ВыборкаОсновные.Следующий() Цикл
		СтруктураПолучателей = Новый Структура;
		СтруктураПолучателей.Вставить("Выбран"			, Истина);
		СтруктураПолучателей.Вставить("Представление"	, ВыборкаОсновные.Сотрудник);
		СтруктураПолучателей.Вставить("Адрес"			, ВыборкаОсновные.ЭлектронныйАдрес);
		МассивПолучателей.Добавить(СтруктураПолучателей);	
	КонецЦикла;
	
	Адресаты = Новый Структура("МассивПолучателей, МассивПолучателейКопии", МассивПолучателей, МассивПолучателейКопии);
	
	Возврат Адресаты;
	
КонецФункции

&НаКлиенте
Процедура ОтправитьПоПочте(Команда)
	
	ПараметрыПисьма = СформироватьПараметрыПисьмаНаСервере();
	ПоказатьДиалогОтправкиПоЭлектроннойПочте(ПараметрыПисьма);

КонецПроцедуры

&НаКлиенте
Процедура ПоказатьДиалогОтправкиПоЭлектроннойПочте(ПараметрыПисьма)
	
	ОтчетНаименованиеТекущегоВарианта = "Оценка выполнения работ";
	
	ТабличныеДокументы = Новый СписокЗначений;
	ТабличныеДокументы.Добавить(ПараметрыПисьма.ФормаОценки, ОтчетНаименованиеТекущегоВарианта);
	
	ЗаголовокСохранения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Отправка отчета ""%1"" по почте'"), ОтчетНаименованиеТекущегоВарианта);
	ПараметрыОтправки = Новый Структура;
	ПараметрыОтправки.Вставить("Тема"			, ""+Объект.Проект+", оценка качества работ");
	ПараметрыОтправки.Вставить("Получатель"		, ПараметрыПисьма.Получатели);
	ПараметрыОтправки.Вставить("ПолучательКопии", ПараметрыПисьма.ПолучателиКопии);
	ПараметрыОтправки.Вставить("Тело"			, "Здравствуйте, служба контроля качества провела оценку выполненных вами работ по проекту "+Объект.Проект);
	ПараметрыОтправки.Вставить("ФорматОтправки" , "HTML");
	
	МодульРаботаСПочтовымиСообщениямиКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("РаботаСПочтовымиСообщениямиКлиент");
	МодульРаботаСПочтовымиСообщениямиКлиент.ОтправитьТабличныеДокументы(ТабличныеДокументы, ЗаголовокСохранения, ПараметрыОтправки);
	
КонецПроцедуры

#КонецОбласти

&НаСервереБезКонтекста
Функция ПолучитьМассивРабот(Знач ВыбРаботы)
	
	Возврат ВыбРаботы.Выгрузить().ВыгрузитьКолонку("Работа");
	
КонецФункции

&НаСервере
Процедура ОбновитьИтоговуюОценку()
	
	СуммаЗамечаний = 0;
	РассчитатьСуммаЗамечаний(РеквизитФормыВЗначение("ДеревоКритериев"), СуммаЗамечаний);
	Объект.ИтоговаяОценка = 250-?(СуммаЗамечаний>250, 250, СуммаЗамечаний);
	
КонецПроцедуры

&НаСервере
Процедура РассчитатьСуммаЗамечаний(ПереданноеДерево, СуммаЗамечаний)
	
	Для Каждого СтрокаДерева Из ПереданноеДерево.Строки Цикл
		Если СтрокаДерева.ЕстьЗамечание Тогда
			СуммаЗамечаний = СуммаЗамечаний + СтрокаДерева.Критерий.Стоимость;
		КонецЕсли;
		РассчитатьСуммаЗамечаний(СтрокаДерева, СуммаЗамечаний);
	КонецЦикла;
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ БСП

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	
	УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтотОбъект, Объект);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.Печать



